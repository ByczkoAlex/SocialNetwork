{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogsItem/DialogsItem.tsx","components/Dialogs/Messages/Messages.tsx","components/Dialogs/AddMessageForm/AddMessageForm.tsx","components/Dialogs/dialogs.tsx","components/Dialogs/dialogsContainer.tsx"],"names":["module","exports","Dialog","props","className","s","dialog","to","id","activeClassName","active","name","Message","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","requiredField","placeholder","Dialogs","state","dialogsPage","dialogsElements","dialogData","map","d","key","messagesElements","messagesData","m","dialogs","dialogs_item","messages","values","sendMessage","newMessageBody","compose","connect","DialogsReducer","dispatch","SandMessageCreator","WithAusRedirect"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,sFCgBpMC,MANf,SAAgBC,GACZ,OAAO,yBAAKC,UAAWC,IAAEC,QACrB,kBAAC,IAAD,CAASC,GAAI,YAAcJ,EAAMK,GAAIC,gBAAiBJ,IAAEK,QAAxD,IAAkEP,EAAMQ,KAAxE,OCDOC,MAJf,SAAiBT,GACb,OAAO,yBAAKC,UAAWC,IAAEQ,SAAUV,EAAMU,U,kCCAvCC,EAAcC,YAAiB,IAevBC,EAAsBC,YAAe,CAACC,KAAM,wBAAtBD,EAb8B,SAACd,GAC/D,OACI,0BAAMgB,SAAUhB,EAAMiB,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IACXC,SAAU,CAACC,IAAeX,GAC1BH,KAAM,iBAAkBe,YAAa,wBAEhD,6BAAK,6CCgCFC,MA9Bf,SAAiBxB,GAEb,IAAIyB,EAAQzB,EAAM0B,YAEdC,EAAkBF,EAAMG,WAAWC,KAAI,SAACC,GAAD,OAAmB,kBAAC,EAAD,CAAQzB,GAAIyB,EAAEzB,GAAI0B,IAAKD,EAAEzB,GAAIG,KAAMsB,EAAEtB,UAC/FwB,EAAmBP,EAAMQ,aAAaJ,KAAI,SAACK,GAAD,OAAoB,kBAAC,EAAD,CAASH,IAAKG,EAAE7B,GAAIK,QAASwB,EAAExB,aAOjG,OACI,yBAAKT,UAAWC,IAAEiC,SACd,yBAAKlC,UAAWC,IAAEkC,cACbT,GAEL,yBAAK1B,UAAWC,IAAEmC,UACd,6BAAML,GACN,6BACI,6BACI,kBAACnB,EAAD,CAAqBG,SAdrB,SAACsB,GACjBtC,EAAMuC,YAAYD,EAAOE,wB,gCCClBC,sBACXC,aAfkB,SAACjB,GACnB,MAAO,CACHC,YAAaD,EAAMkB,eAAejB,gBAIjB,SAACkB,GACtB,MAAO,CACHL,YAAa,SAACC,GACVI,EAASC,YAAmBL,SAOpCM,IAFWL,CAGbjB","file":"static/js/4.4c7ee689.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1h5iP\",\"dialogs_item\":\"Dialogs_dialogs_item__3nKvu\",\"dialog\":\"Dialogs_dialog__37nTA\",\"active\":\"Dialogs_active__1jPZk\",\"messages\":\"Dialogs_messages__3Ttp_\",\"message\":\"Dialogs_message__JC5N0\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype propsTypeDialogs = {\r\n    name: string\r\n    id: number\r\n}\r\n\r\n\r\n\r\nfunction Dialog(props: propsTypeDialogs) {\r\n    return <div className={s.dialog}>\r\n        <NavLink to={\"/dialogs/\" + props.id} activeClassName={s.active}> {props.name} </NavLink>\r\n    </div>\r\n}\r\n\r\nexport default Dialog","import React from 'react';\r\nimport s from './../Dialogs.module.css'\r\n\r\ntype propsTypeMessages = {\r\n    message: string\r\n    key:number\r\n}\r\n\r\nfunction Message(props: propsTypeMessages) {\r\n    return <div className={s.message}>{props.message}</div>\r\n}\r\n\r\nexport default Message","import React from \"react\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../../common/FormControll/FormControll\";\r\nimport {maxLengthCreator, requiredField} from \"../../../utils/validators/validators\";\r\n\r\ntype FormDataType = {\r\n    newMessageBody: string\r\n}\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nconst AddMessageForm: React.FC<InjectedFormProps<FormDataType>> = (props:any) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                       validate={[requiredField, maxLength50]}\r\n                       name={\"newMessageBody\"} placeholder={\"enter your message\"} />\r\n            </div>\r\n            <div><button>send</button></div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport  const AddMessageFormRedux = reduxForm<any>({form: \"DialogAddMessageForm\"})(AddMessageForm)\r\n\r\n","import React from 'react';\r\nimport s from './Dialogs.module.css'\r\nimport Dialog from \"./DialogsItem/DialogsItem\";\r\nimport Message from \"./Messages/Messages\";\r\nimport {MapStateToPropsType1, MapDispatchToPropsType1} from './dialogsContainer';\r\nimport {InjectedFormProps, Field} from \"redux-form\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../common/FormControll/FormControll\";\r\nimport {maxLengthCreator, requiredField} from \"../../utils/validators/validators\";\r\nimport {AddMessageFormRedux} from \"./AddMessageForm/AddMessageForm\";\r\n\r\nexport type MessageType = {\r\n    id: number\r\n    message: string\r\n}\r\nexport type DialogType = {\r\n    id: number\r\n    name: string\r\n}\r\n\r\n\r\nfunction Dialogs(props: MapStateToPropsType1 & MapDispatchToPropsType1) {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogData.map((d: DialogType) => <Dialog id={d.id} key={d.id} name={d.name}/>);\r\n    let messagesElements = state.messagesData.map((m: MessageType) => <Message key={m.id} message={m.message}/>);\r\n\r\n    let addNewMessage = (values:any) => {\r\n        props.sendMessage(values.newMessageBody)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogs_item}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n                <div>\r\n                    <div>\r\n                        <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Dialogs","import Dialogs from \"./dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {messagesPage1, SandMessageCreator} from \"../../redux/dialogsReducer\";\r\nimport {RootStateRedux} from \"../../redux/redux-store\";\r\nimport React, {ComponentClass} from \"react\";\r\nimport {WithAusRedirect} from \"../HOC/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nexport type MapStateToPropsType1 = {\r\n    dialogsPage: messagesPage1\r\n}\r\n\r\nexport type MapDispatchToPropsType1 = {\r\n    sendMessage: (newMessageBody: string) => void\r\n}\r\n\r\nlet MapStateToProps = (state: RootStateRedux) => {\r\n    return {\r\n        dialogsPage: state.DialogsReducer.dialogsPage,\r\n    }\r\n};\r\n\r\nlet MapDispatchToProps = (dispatch: any): MapDispatchToPropsType1 => {\r\n    return {\r\n        sendMessage: (newMessageBody: string) => {\r\n            dispatch(SandMessageCreator(newMessageBody));\r\n        },\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(MapStateToProps, MapDispatchToProps),\r\n    WithAusRedirect\r\n)(Dialogs) as ComponentClass"],"sourceRoot":""}